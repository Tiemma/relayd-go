
######################################
###########THINGS TO NOTE#############
# 1. The certificate for the tls relay should be in the directory with a path such as :
#  /etc/ssl/<exposedInstance>.crt 
# where exposedInstance is the ip address of the host you'd be running this on. It's defined below
#
# 2. The key should be located in the directory where the key is stored with a path such as:
# /etc/ssl/private/<exposedInstance>.key
#where the exposedInstance is the ip address of the host
#
# NOTE: The filename must use the ip of the exposed instance and not the url <e.g raedahgroup.com>
#
# Example logs of the directory using this configuration can be seen below:
#
## relay_load_certfiles: using certificate /etc/ssl/80.240.27.13.crt
## relay_load_certfiles: using private key /etc/ssl/private/80.240.27.13.key
#
# Once you've updated all the configurations, kindly copy this file to /etc with the path /etc/relayd.conf
# Likewise use the deploy.sh script in this project
######################################


localServicesTLSPort = "8443" # No need to change, not in use
localServicesPort = "80" # Change if the default port is not 80
localServicesHost = "127.0.0.1" # DO NOT CHANGE: Services should be binded internally

table <localServices> { $localServicesHost }

exposedInstance = "80.240.27.13" # CHANGE THIS TO THE IP ADDRESS OF THE SITE
exposedInstancePort = "443" # KINDLY LEAVE FOR SSL SUPPORT
exposedInstancePortHTTP = "8080" # NOT NEEDED, JUST FOR TESTING
hostName = "bakare.raedahgroup.com" # CHANGE TO THE DOMAIN NAME YOU'RE RUNNING IT FOR

interval 10

log host checks
log connection

prefork 3

timeout 1000	


#######################################################################
#########ALL CONFIGS BELOW HERE DO NOT NEED TO BE CHANGED##############
#######################################################################

http protocol "tcp_service_tls" {
# Enabled by default       tls { no tlsv1.0, ciphers "HIGH" }
        pass request quick header "Host" value $hostName forward  to <localServices>
	
	tls { tlsv1, ciphers "HIGH" }
	tcp { nodelay, socket buffer 65536 }
	
	match request header append "X-Forwarded-For" value "$REMOTE_ADDR" 
	match request header append "X-Forwarded-By" value "$SERVER_ADDR:$SERVER_PORT"

	match response header append "X-XSS-Protection" value "1; mode=block"
	match response header append "X-Permitted-Cross-Domain-Policies" value "none"
	match response header append "X-Frame-Options" value "DENY"
	match response header append "X-Content-Type-Options" value "nosniff"
	match response header append "Referrer-Policy" value "same-origin"

}

http protocol "tcp_service" {
	tcp { nodelay, socket buffer 65536 }
}

# This http relay is mostly for testing and asserting all is fine
relay "tcp_forwarder" {
        listen on $exposedInstance port $exposedInstancePortHTTP
        protocol "tcp_service"
	forward to <localServices> port $localServicesPort 
#check http "/" code 200
}


relay "tcp_forwarder_tls" {
        listen on $exposedInstance port $exposedInstancePort tls
        protocol "tcp_service_tls"
	forward to <localServices> port $localServicesPort 
#check https "/" code 200 
}
