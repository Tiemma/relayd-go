localServicesTLSPort = "8443" 
localServicesPort = "80" 
localServicesHost = "127.0.0.1" 

table <localServices> { $localServicesHost }

exposedInstance = "80.240.27.13" 
exposedInstancePort = "443"
exposedInstancePortHTTP = "8080"

interval 10

log host checks
log connection

prefork 3

timeout 1000	

#redirect "www" {
#	listen on address $exposedInstance port $exposedInstancePort
#	forward to <localServices> port $localServicesPorts check http "/" code 200
#}


http protocol "tcp_service_tls" {
# Enabled by default       tls { no tlsv1.0, ciphers "HIGH" }
        pass request quick header "Host" value "bakare.raedahgroup.com" forward  to <localServices>
	
	tls { tlsv1, ciphers "HIGH" }
	tcp { nodelay, socket buffer 65536 }
	
	match request header append "X-Forwarded-For" value "$REMOTE_ADDR" 
	match request header append "X-Forwarded-By" value "$SERVER_ADDR:$SERVER_PORT"

	match response header append "X-XSS-Protection" value "1; mode=block"
	match response header append "X-Permitted-Cross-Domain-Policies" value "none"
	match response header append "X-Frame-Options" value "DENY"
	match response header append "X-Content-Type-Options" value "nosniff"
	match response header append "Referrer-Policy" value "same-origin"

}

http protocol "tcp_service" {
	tcp { nodelay, socket buffer 65536 }
}

# This http relay is mostly for testing and asserting all is fine
relay "tcp_forwarder" {
        listen on $exposedInstance port $exposedInstancePortHTTP
        protocol "tcp_service"
	forward to <localServices> port $localServicesPort check http "/" code 200
}


relay "tcp_forwarder_tls" {
        listen on $exposedInstance port $exposedInstancePort tls
        protocol "tcp_service_tls"
	forward to <localServices> port $localServicesPort check https "/" code 200 
}
